{"version":3,"sources":["components/Question.js","components/Trivia.js","App.js","index.js"],"names":["Question","question","className","answer","value","Trivia","useState","counter","setCounter","setQuestion","useEffect","getQuestion","a","fetch","response","json","data","onClick","App","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAkBeA,G,YAfE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,oCACE,yBAAKC,UAAU,QACb,4BACE,qCAAWD,EAASA,SAApB,OAEF,4BAAKA,EAASE,SAEhB,6BACA,kCAAQF,EAASG,MAAjB,cC4DSC,EArEA,WAAO,IAAD,EACWC,mBAAS,GADpB,mBACZC,EADY,KACHC,EADG,OAEaF,mBAAS,IAFtB,mBAEZL,EAFY,KAEFQ,EAFE,KAInBC,qBAAU,WACRC,MACC,CAACJ,IAEJ,IAAMI,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,kCADX,cACZC,EADY,gBAECA,EAASC,OAFV,OAEZC,EAFY,OAGlBP,EAAYO,EAAK,IAHC,2CAAH,qDAwBjB,OACE,oCACE,wBAAId,UAAuB,KAAZK,EAAiB,OAAS,UAAzC,YACA,yBAAKL,UAAU,OACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,aAAd,UACA,uBAAGA,UAAU,oBAAb,kEACkE,IAChE,6BAFF,2CAG0C,6BAH1C,iCAIW,6BAJX,0CAMA,yBAAKA,UAAU,SACb,uBACEA,UAAU,sBACVe,QAASV,EAAU,IAjCb,WAChBC,EAAWD,EAAU,MAkCb,uBACEL,UAAU,sBACVe,QAASV,EAAU,GAlCb,WAChBC,EAAWD,EAAU,MAmCb,sCAAYA,IAGd,wCACA,uBAAGL,UAAU,SAASe,QApChB,WACZN,IACAH,EAAqB,EAAVD,KAkCL,cAGA,yBAAKL,UAAU,YACb,kBAAC,EAAD,CAAUD,SAAUA,SCrCjBiB,MAxBf,WACE,OACE,oCACE,gCACE,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,QACZ,sCAEF,wBAAIA,UAAU,YACZ,wBAAIA,UAAU,aACZ,uBAAGiB,KAAK,KAAR,sBAMV,8BACE,kBAAC,EAAD,SCjBRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.866fbf22.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Question.css'\r\n\r\nconst Question = ({ question }) => {\r\n  return (\r\n    <>\r\n      <div className='card'>\r\n        <h2>\r\n          <strong>- {question.question} -</strong>\r\n        </h2>\r\n        <h1>{question.answer}</h1>\r\n      </div>\r\n      <br />\r\n      <i>For {question.value} points</i>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Question\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Trivia.css'\r\nimport Question from './Question'\r\n\r\nconst Trivia = () => {\r\n  const [counter, setCounter] = useState(0)\r\n  const [question, setQuestion] = useState([])\r\n\r\n  useEffect(() => {\r\n    getQuestion()\r\n  }, [counter])\r\n\r\n  const getQuestion = async () => {\r\n    const response = await fetch('https://jservice.io/api/random')\r\n    const data = await response.json()\r\n    setQuestion(data[0])\r\n  }\r\n\r\n  const increment = () => {\r\n    setCounter(counter + 1)\r\n  }\r\n  const decrement = () => {\r\n    setCounter(counter - 1)\r\n  }\r\n\r\n  const reset = () => {\r\n    getQuestion()\r\n    setCounter(counter * 0)\r\n  }\r\n\r\n  // const checkGameState = (e) => {\r\n  //   if (e.target.classList.value === 'show') {\r\n  //     setTimeout(alert('HEllo'), 3000)\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h1 className={counter === 10 ? 'show' : 'hidden'}>You Won!</h1>\r\n      <div className='box'>\r\n        <div className='box-container'>\r\n          <h1 className='box-title'>Trivia</h1>\r\n          <p className='box-instructions'>\r\n            Get a trivia question Hit Green check mark if you get it right.{' '}\r\n            <br />\r\n            Hit Red check mark if you get it wrong. <br /> See what streak you\r\n            can get! <br /> Your goal is to reach the score of 10\r\n          </p>\r\n          <div className='icons'>\r\n            <i\r\n              className='fas fa-check-square'\r\n              onClick={counter < 10 ? increment : false}\r\n            ></i>\r\n            <i\r\n              className='fas fa-times-circle'\r\n              onClick={counter > 0 ? decrement : false}\r\n            ></i>\r\n            <h1>Score: {counter}</h1>\r\n          </div>\r\n\r\n          <h1>Question</h1>\r\n          <p className='submit' onClick={reset}>\r\n            Start Over\r\n          </p>\r\n          <div className='box-info'>\r\n            <Question question={question} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Trivia\r\n","import React from 'react'\nimport './App.css'\nimport Trivia from './components/Trivia'\n\nfunction App() {\n  return (\n    <>\n      <header>\n        <div className='container'>\n          <div className='header'>\n            <h1 className='logo'>\n              <p>Trivia</p>\n            </h1>\n            <ul className='main-nav'>\n              <li className='list-item'>\n                <a href='/'>Made in React</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </header>\n      <main>\n        <Trivia />\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}